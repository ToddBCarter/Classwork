
<pattern> ::= '_' | <tuple_pattern> | <list_pattern> | <cons_pattern>

<tuple_pattern> ::= '(' <tuples> ')' 

<tuples> ::= <pattern> ',' <pattern> | <tuples> ',' <pattern>

<list_pattern> ::= [] | [<lists>]

<lists> ::= <pattern> ',' <lists> | <pattern>

<cons_pattern> ::= <pattern> :: <list_pattern>







2)a)

x := y is safe because you can write any x as 3n and any y as 24m, so y
can be written as 3 (8 * n) = 3m.  So 24n = 8x, which means any multiple of 24
is also a multiple of 3.




2)c)

Y := (Z*Z) - 1 is safe because (Z^2 - 1) = (Z - 1)(Z + 1).
This means there are three consecutive numbers,

(Z - 1)Z(Z + 1) where the middle Z is prime and so not a multiple of 3 or 2.

Then, because Z is not a multiple of 2, (Z - 1) must be a multiple of 2, and (Z + 1) is a multiple of 2.

And either (Z + 1) or (Z - 1) must be a multiple of 4.

Since Z is not a multiple of 3 then (Z - 1) or (Z + 1) must be a multiple of 3.

So, (Z^2 - 1) => 3 * 2 * 4 = 24.






QUICKSORT

KOIC Q SURT

KCIO Q SURT

ICKO Q SURT

CIKO Q SURT

CIKO Q RSUT

CIKO Q RSTU